colnames(results) <- c("Xfr", "Xfa", "Xmr", "Xma","Yfr", "Yfa", "Ymr", "Yma")
for (i in 1:gen) {
#mean fitnesses (weighted sums, which is a mean)
wbarf <- xfr.e*xfr.s*wf[1] + xfr.e*xfa.s*wf[1] + xfr.e*xmr.s*wf[2] + xfr.e*xma.s*wf[2] + xfa.e*xfr.s*wf[1] + xfa.e*xfa.s*wf[1] + xfa.e*xmr.s*wf[2] + xfa.e*xma.s*wf[2] + xmr.e*xfr.s*wf[2] + xmr.e*xfa.s*wf[2] + xmr.e*xmr.s*wf[3] + xmr.e*xma.s*wf[3] + xma.e*xfr.s*wf[2] + xma.e*xfa.s*wf[2] + xma.e*xmr.s*wf[3] + xma.e*xma.s*wf[3]
wbarm <- xfr.e*yfr.s*wm[1,1] + xfr.e*yfa.s*wm[2,1] + xfr.e*ymr.s*wm[1,2] + xfr.e*yma.s*wm[2,2] + xfa.e*yfr.s*wm[2,1] + xfa.e*yfa.s*wm[2,1] + xfa.e*ymr.s*wm[2,2] + xfa.e*yma.s*wm[2,2] + xmr.e*yfr.s*wm[1,2] + xmr.e*yfa.s*wm[2,2] + xmr.e*ymr.s*wm[1,3] + xmr.e*yma.s*wm[2,3] + xma.e*yfr.s*wm[2,2] + xma.e*yfa.s*wm[2,2] + xma.e*ymr.s*wm[2,3] + xma.e*yma.s*wm[2,3]
#female gamete equations
xfr.ep <- (xfr.e*xfr.s*wf[1] + 0.5*xfr.e*xfa.s*wf[1] + 0.5*xfr.e*xmr.s*wf[2] + 0.5*xfr.e*xma.s*wf[2]*(1-r2) + 0.5*xfa.e*xfr.s*wf[1] + 0.5*xfa.e*xmr.s*wf[2]*r2 + 0.5*xmr.e*xfr.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*r2 + 0.5*xma.e*xfr.s*wf[2]*(1-r2))/wbarf
xfa.ep <- (0.5*xfr.e*xfa.s*wf[1] + 0.5*xfr.e*xma.s*wf[2]*r2 + 0.5*xfa.e*xfr.s*wf[1] + xfa.e*xfa.s*wf[1] + 0.5*xfa.e*xmr.s*wf[2]*(1-r2) + 0.5*xfa.e*xma.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*(1-r2) + 0.5*xma.e*xfr.s*wf[2]*r2 + 0.5*xma.e*xfa.s*wf[2])/wbarf
xmr.ep <- (0.5*xfr.e*xmr.s*wf[2] + 0.5*xfr.e*xma.s*wf[2]*r2 + 0.5*xfa.e*xmr.s*wf[2]*(1-r2) + 0.5*xmr.e*xfr.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*(1-r2) + xmr.e*xmr.s*wf[3] + 0.5*xmr.e*xma.s*wf[3] + 0.5*xma.e*xfr.s*wf[2]*r2 + 0.5*xma.e*xmr.s*wf[3])/wbarf
xma.ep <- (0.5*xfr.e*xma.s*wf[2]*(1-r2) + 0.5*xfa.e*xmr.s*wf[2]*r2 + 0.5*xfa.e*xma.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*r2 + 0.5*xmr.e*xma.s*wf[3] + 0.5*xma.e*xfr.s*wf[2]*(1-r2) + 0.5*xma.e*xfa.s*wf[2] + 0.5*xma.e*xmr.s*wf[3] + xma.e*xma.s*wf[3])/wbarf
# #male gamete equations - y chromosome
# xfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.5*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.5*xfr.e*yma.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1)/wbarm
# xfa.sp <- (0.5*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.5*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2])/wbarm
# xmr.sp <- (0.5*xmr.e*yfa.s*wm[2,2] + 0.5*xmr.e*ymr.s*wm[1,3] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.5*xmr.e*yma.s*wm[2,3] + 0.5*xfr.e*ymr.s*wm[1,2]*r1)/wbarm
# xma.sp <- (0.5*xma.e*yfr.s*wm[2,2] + 0.5*xma.e*yfa.s*wm[2,2] + 0.5*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#
# yfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.5*xfa.e*yfr.s*wm[2,1] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.5*xma.e*yfr.s*wm[2,2])/wbarm
# yfa.sp <- (0.5*xfr.e*yfa.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.5*xmr.e*yfa.s*wm[2,2] + 0.5*xma.e*yfa.s*wm[2,2])/wbarm
# ymr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.5*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1 + 0.5*xmr.e*ymr.s*wm[1,3] + 0.5*xma.e*ymr.s*wm[2,3])/wbarm
# yma.sp <- (0.5*xfr.e*yma.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2] + 0.5*xmr.e*yma.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#male gamete equations - autosome
xfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.25*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1)/wbarm
xfa.sp <- (0.25*xfr.e*yfa.s*wm[2,1] + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2])/wbarm
xmr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.25*xmr.e*yfa.s*wm[2,2] + 0.5*xmr.e*ymr.s*wm[1,3] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*ymr.s*wm[2,3])/wbarm
xma.sp <- (0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*yfa.s*wm[2,2] + 0.25*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
yfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.25*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xma.e*yfr.s*wm[2,2])/wbarm
yfa.sp <- (0.25*xfr.e*yfa.s*wm[2,1] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*yfa.s*wm[2,2])/wbarm
ymr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1 + 0.5*xmr.e*ymr.s*wm[1,3] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*ymr.s*wm[2,3])/wbarm
yma.sp <- (0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#fill in new values
xfr.e <- xfr.ep
xfa.e <- xfa.ep
xmr.e <- xmr.ep
xma.e <- xma.ep
xfr.s <- xfr.sp
xfa.s <- xfa.sp
xmr.s <- xmr.sp
xma.s <- xma.sp
yfr.s <- yfr.sp
yfa.s <- yfa.sp
ymr.s <- ymr.sp
yma.s <- yma.sp
#TODO select frequencies to track
results[i,1] <- (xfr.e+xfr.s)/1.5
results[i,2] <- (xfa.e+xfa.s)/1.5
results[i,3] <- (xmr.e+xmr.s)/1.5
results[i,4] <- (xma.e+xma.s)/1.5
results[i,5] <- yfr.s/0.5
results[i,6] <- yfa.s/0.5
results[i,7] <- ymr.s/0.5
results[i,8] <- yma.s/0.5
#increase mutational load
ml <- ml + me*u
#recalculate male fitness after mutational load changes
wm <- matrix(c(1-aneu, 1-ml, (1+h*s)*(1-aneu), (1+h*s)*(1-ml), (1+s)*(1-aneu), (1+s)*(1-ml)), 2, 3)
}
return(results)
}
simLife <- function(h = 1, s = 0, r1 = 0, r2 = 0,
gen = 1000, me = 0.001, u = 0.001,
aneu=0, auto.option=0){
#TODO
# mutational load
ml <- 0
# fitness matrices
wf <- c(1, 1/(1+h*s), 1/(1+s))
wm <- matrix(c(1-aneu, 1-ml, (1+h*s)*(1-aneu), (1+h*s)*(1-ml), (1+s)*(1-aneu), (1+s)*(1-ml)), 2, 3)
# Initial gamete frequencies
# ########### for x
# # eggs
# xfr.e <- 0.499925
# xfa.e <- 0.000075
# xmr.e <- 0.499925
# xma.e <- 0.000075
# # sperm
# xfr.s <- 0.249925
# xfa.s <- 0.000025
# xmr.s <- 0.249925
# xma.s <- 0.000025
# yfr.s <- 0.25
# yfa.s <- 0
# ymr.s <- 0.25
# yma.s <- 0
########### for y
# eggs
xfr.e <- 0.5
xfa.e <- 0
xmr.e <- 0.5
xma.e <- 0
# sperm
xfr.s <- 0.25
xfa.s <- 0
xmr.s <- 0.25
xma.s <- 0
yfr.s <- 0.24995
yfa.s <- 0.00005
ymr.s <- 0.24995
yma.s <- 0.00005
# ############ for autosome
# # eggs
# xfr.e <- 0.49995
# xfa.e <- 0.00005
# xmr.e <- 0.49995
# xma.e <- 0.00005
# # sperm
# xfr.s <- 0.249975
# xfa.s <- 0.000025
# xmr.s <- 0.249975
# xma.s <- 0.000025
# yfr.s <- 0.249975
# yfa.s <- 0.000025
# ymr.s <- 0.249975
# yma.s <- 0.000025
results <- matrix(NA,gen,8)
colnames(results) <- c("Xfr", "Xfa", "Xmr", "Xma","Yfr", "Yfa", "Ymr", "Yma")
for (i in 1:gen) {
#mean fitnesses (weighted sums, which is a mean)
wbarf <- xfr.e*xfr.s*wf[1] + xfr.e*xfa.s*wf[1] + xfr.e*xmr.s*wf[2] + xfr.e*xma.s*wf[2] + xfa.e*xfr.s*wf[1] + xfa.e*xfa.s*wf[1] + xfa.e*xmr.s*wf[2] + xfa.e*xma.s*wf[2] + xmr.e*xfr.s*wf[2] + xmr.e*xfa.s*wf[2] + xmr.e*xmr.s*wf[3] + xmr.e*xma.s*wf[3] + xma.e*xfr.s*wf[2] + xma.e*xfa.s*wf[2] + xma.e*xmr.s*wf[3] + xma.e*xma.s*wf[3]
wbarm <- xfr.e*yfr.s*wm[1,1] + xfr.e*yfa.s*wm[2,1] + xfr.e*ymr.s*wm[1,2] + xfr.e*yma.s*wm[2,2] + xfa.e*yfr.s*wm[2,1] + xfa.e*yfa.s*wm[2,1] + xfa.e*ymr.s*wm[2,2] + xfa.e*yma.s*wm[2,2] + xmr.e*yfr.s*wm[1,2] + xmr.e*yfa.s*wm[2,2] + xmr.e*ymr.s*wm[1,3] + xmr.e*yma.s*wm[2,3] + xma.e*yfr.s*wm[2,2] + xma.e*yfa.s*wm[2,2] + xma.e*ymr.s*wm[2,3] + xma.e*yma.s*wm[2,3]
#female gamete equations
xfr.ep <- (xfr.e*xfr.s*wf[1] + 0.5*xfr.e*xfa.s*wf[1] + 0.5*xfr.e*xmr.s*wf[2] + 0.5*xfr.e*xma.s*wf[2]*(1-r2) + 0.5*xfa.e*xfr.s*wf[1] + 0.5*xfa.e*xmr.s*wf[2]*r2 + 0.5*xmr.e*xfr.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*r2 + 0.5*xma.e*xfr.s*wf[2]*(1-r2))/wbarf
xfa.ep <- (0.5*xfr.e*xfa.s*wf[1] + 0.5*xfr.e*xma.s*wf[2]*r2 + 0.5*xfa.e*xfr.s*wf[1] + xfa.e*xfa.s*wf[1] + 0.5*xfa.e*xmr.s*wf[2]*(1-r2) + 0.5*xfa.e*xma.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*(1-r2) + 0.5*xma.e*xfr.s*wf[2]*r2 + 0.5*xma.e*xfa.s*wf[2])/wbarf
xmr.ep <- (0.5*xfr.e*xmr.s*wf[2] + 0.5*xfr.e*xma.s*wf[2]*r2 + 0.5*xfa.e*xmr.s*wf[2]*(1-r2) + 0.5*xmr.e*xfr.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*(1-r2) + xmr.e*xmr.s*wf[3] + 0.5*xmr.e*xma.s*wf[3] + 0.5*xma.e*xfr.s*wf[2]*r2 + 0.5*xma.e*xmr.s*wf[3])/wbarf
xma.ep <- (0.5*xfr.e*xma.s*wf[2]*(1-r2) + 0.5*xfa.e*xmr.s*wf[2]*r2 + 0.5*xfa.e*xma.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*r2 + 0.5*xmr.e*xma.s*wf[3] + 0.5*xma.e*xfr.s*wf[2]*(1-r2) + 0.5*xma.e*xfa.s*wf[2] + 0.5*xma.e*xmr.s*wf[3] + xma.e*xma.s*wf[3])/wbarf
#male gamete equations - y chromosome
xfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.5*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.5*xfr.e*yma.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1)/wbarm
xfa.sp <- (0.5*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.5*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2])/wbarm
xmr.sp <- (0.5*xmr.e*yfa.s*wm[2,2] + 0.5*xmr.e*ymr.s*wm[1,3] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.5*xmr.e*yma.s*wm[2,3] + 0.5*xfr.e*ymr.s*wm[1,2]*r1)/wbarm
xma.sp <- (0.5*xma.e*yfr.s*wm[2,2] + 0.5*xma.e*yfa.s*wm[2,2] + 0.5*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
yfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.5*xfa.e*yfr.s*wm[2,1] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.5*xma.e*yfr.s*wm[2,2])/wbarm
yfa.sp <- (0.5*xfr.e*yfa.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.5*xmr.e*yfa.s*wm[2,2] + 0.5*xma.e*yfa.s*wm[2,2])/wbarm
ymr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.5*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1 + 0.5*xmr.e*ymr.s*wm[1,3] + 0.5*xma.e*ymr.s*wm[2,3])/wbarm
yma.sp <- (0.5*xfr.e*yma.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2] + 0.5*xmr.e*yma.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
# #male gamete equations - autosome
# xfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.25*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1)/wbarm
# xfa.sp <- (0.25*xfr.e*yfa.s*wm[2,1] + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2])/wbarm
# xmr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.25*xmr.e*yfa.s*wm[2,2] + 0.5*xmr.e*ymr.s*wm[1,3] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*ymr.s*wm[2,3])/wbarm
# xma.sp <- (0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*yfa.s*wm[2,2] + 0.25*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#
# yfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.25*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xma.e*yfr.s*wm[2,2])/wbarm
# yfa.sp <- (0.25*xfr.e*yfa.s*wm[2,1] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*yfa.s*wm[2,2])/wbarm
# ymr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1 + 0.5*xmr.e*ymr.s*wm[1,3] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*ymr.s*wm[2,3])/wbarm
# yma.sp <- (0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#fill in new values
xfr.e <- xfr.ep
xfa.e <- xfa.ep
xmr.e <- xmr.ep
xma.e <- xma.ep
xfr.s <- xfr.sp
xfa.s <- xfa.sp
xmr.s <- xmr.sp
xma.s <- xma.sp
yfr.s <- yfr.sp
yfa.s <- yfa.sp
ymr.s <- ymr.sp
yma.s <- yma.sp
#TODO select frequencies to track
results[i,1] <- (xfr.e+xfr.s)/1.5
results[i,2] <- (xfa.e+xfa.s)/1.5
results[i,3] <- (xmr.e+xmr.s)/1.5
results[i,4] <- (xma.e+xma.s)/1.5
results[i,5] <- yfr.s/0.5
results[i,6] <- yfa.s/0.5
results[i,7] <- ymr.s/0.5
results[i,8] <- yma.s/0.5
#increase mutational load
ml <- ml + me*u
#recalculate male fitness after mutational load changes
wm <- matrix(c(1-aneu, 1-ml, (1+h*s)*(1-aneu), (1+h*s)*(1-ml), (1+s)*(1-aneu), (1+s)*(1-ml)), 2, 3)
}
return(results)
}
steps <- 200
mes <- seq(from = 0, to = 0.5, length.out=steps)
kvals <- seq(from = 0, to = 0.5, length.out=steps)
resXr <- resXa <- resYr <- resYa <- matrix(NA, steps, steps)
row.names(resXr) <- row.names(resXa) <- row.names(resYr) <- row.names(resYa) <- paste("me.", round(mes, 3), sep="")
colnames(resXr) <- colnames(resXa)<- colnames(resYr) <- colnames(resYa) <- paste("kval.", round(kvals, 3), sep="")
gen <- 1000
for (i in 1:steps) { # cycles through the mutational effects factors
print(paste("working on me", i))
for (j in 1:steps) { # cycles through the selection coef.
res <- simLife(r2 = 0.1, r1 = 0.1, h=1, s=0,
aneu = kvals[j], me = mes[i],
gen = gen)
resXr[i, j] <- (res[gen,1]+res[gen,3])
resXa[i, j] <- (res[gen,2]+res[gen,4])
resYr[i, j] <- (res[gen,5]+res[gen,7])
resYa[i, j] <- (res[gen,6]+res[gen,8])
}
}
image(resYa, col = viridis(100), yaxt='n', xaxt='n', zlim = c(0,1),
ylab = "Aneuploidy Rate",
xlab = "Mutation Effect (Deleterious)",
main = "Frequency on Y")
axis(2, at = seq(from = 0, to = 1, length.out=6),
labels = seq(from = 0, to = 0.5, length.out=6))
axis(1, at = seq(from = 0, to = 1, length.out=6),
labels = seq(from = 0, to = 0.5, length.out=6))
simLife <- function(h = 1, s = 0, r1 = 0, r2 = 0,
gen = 1000, me = 0.001, u = 0.001,
aneu=0, auto.option=0){
#TODO
# mutational load
ml <- 0
# fitness matrices
wf <- c(1, 1/(1+h*s), 1/(1+s))
wm <- matrix(c(1-aneu, 1-ml, (1+h*s)*(1-aneu), (1+h*s)*(1-ml), (1+s)*(1-aneu), (1+s)*(1-ml)), 2, 3)
# Initial gamete frequencies
########### for x
# eggs
xfr.e <- 0.499925
xfa.e <- 0.000075
xmr.e <- 0.499925
xma.e <- 0.000075
# sperm
xfr.s <- 0.249925
xfa.s <- 0.000025
xmr.s <- 0.249925
xma.s <- 0.000025
yfr.s <- 0.25
yfa.s <- 0
ymr.s <- 0.25
yma.s <- 0
# ########### for y
# # eggs
# xfr.e <- 0.5
# xfa.e <- 0
# xmr.e <- 0.5
# xma.e <- 0
# # sperm
# xfr.s <- 0.25
# xfa.s <- 0
# xmr.s <- 0.25
# xma.s <- 0
# yfr.s <- 0.24995
# yfa.s <- 0.00005
# ymr.s <- 0.24995
# yma.s <- 0.00005
#
# ############ for autosome
# # eggs
# xfr.e <- 0.49995
# xfa.e <- 0.00005
# xmr.e <- 0.49995
# xma.e <- 0.00005
# # sperm
# xfr.s <- 0.249975
# xfa.s <- 0.000025
# xmr.s <- 0.249975
# xma.s <- 0.000025
# yfr.s <- 0.249975
# yfa.s <- 0.000025
# ymr.s <- 0.249975
# yma.s <- 0.000025
results <- matrix(NA,gen,8)
colnames(results) <- c("Xfr", "Xfa", "Xmr", "Xma","Yfr", "Yfa", "Ymr", "Yma")
for (i in 1:gen) {
#mean fitnesses (weighted sums, which is a mean)
wbarf <- xfr.e*xfr.s*wf[1] + xfr.e*xfa.s*wf[1] + xfr.e*xmr.s*wf[2] + xfr.e*xma.s*wf[2] + xfa.e*xfr.s*wf[1] + xfa.e*xfa.s*wf[1] + xfa.e*xmr.s*wf[2] + xfa.e*xma.s*wf[2] + xmr.e*xfr.s*wf[2] + xmr.e*xfa.s*wf[2] + xmr.e*xmr.s*wf[3] + xmr.e*xma.s*wf[3] + xma.e*xfr.s*wf[2] + xma.e*xfa.s*wf[2] + xma.e*xmr.s*wf[3] + xma.e*xma.s*wf[3]
wbarm <- xfr.e*yfr.s*wm[1,1] + xfr.e*yfa.s*wm[2,1] + xfr.e*ymr.s*wm[1,2] + xfr.e*yma.s*wm[2,2] + xfa.e*yfr.s*wm[2,1] + xfa.e*yfa.s*wm[2,1] + xfa.e*ymr.s*wm[2,2] + xfa.e*yma.s*wm[2,2] + xmr.e*yfr.s*wm[1,2] + xmr.e*yfa.s*wm[2,2] + xmr.e*ymr.s*wm[1,3] + xmr.e*yma.s*wm[2,3] + xma.e*yfr.s*wm[2,2] + xma.e*yfa.s*wm[2,2] + xma.e*ymr.s*wm[2,3] + xma.e*yma.s*wm[2,3]
#female gamete equations
xfr.ep <- (xfr.e*xfr.s*wf[1] + 0.5*xfr.e*xfa.s*wf[1] + 0.5*xfr.e*xmr.s*wf[2] + 0.5*xfr.e*xma.s*wf[2]*(1-r2) + 0.5*xfa.e*xfr.s*wf[1] + 0.5*xfa.e*xmr.s*wf[2]*r2 + 0.5*xmr.e*xfr.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*r2 + 0.5*xma.e*xfr.s*wf[2]*(1-r2))/wbarf
xfa.ep <- (0.5*xfr.e*xfa.s*wf[1] + 0.5*xfr.e*xma.s*wf[2]*r2 + 0.5*xfa.e*xfr.s*wf[1] + xfa.e*xfa.s*wf[1] + 0.5*xfa.e*xmr.s*wf[2]*(1-r2) + 0.5*xfa.e*xma.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*(1-r2) + 0.5*xma.e*xfr.s*wf[2]*r2 + 0.5*xma.e*xfa.s*wf[2])/wbarf
xmr.ep <- (0.5*xfr.e*xmr.s*wf[2] + 0.5*xfr.e*xma.s*wf[2]*r2 + 0.5*xfa.e*xmr.s*wf[2]*(1-r2) + 0.5*xmr.e*xfr.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*(1-r2) + xmr.e*xmr.s*wf[3] + 0.5*xmr.e*xma.s*wf[3] + 0.5*xma.e*xfr.s*wf[2]*r2 + 0.5*xma.e*xmr.s*wf[3])/wbarf
xma.ep <- (0.5*xfr.e*xma.s*wf[2]*(1-r2) + 0.5*xfa.e*xmr.s*wf[2]*r2 + 0.5*xfa.e*xma.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*r2 + 0.5*xmr.e*xma.s*wf[3] + 0.5*xma.e*xfr.s*wf[2]*(1-r2) + 0.5*xma.e*xfa.s*wf[2] + 0.5*xma.e*xmr.s*wf[3] + xma.e*xma.s*wf[3])/wbarf
#male gamete equations - y chromosome
xfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.5*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.5*xfr.e*yma.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1)/wbarm
xfa.sp <- (0.5*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.5*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2])/wbarm
xmr.sp <- (0.5*xmr.e*yfa.s*wm[2,2] + 0.5*xmr.e*ymr.s*wm[1,3] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.5*xmr.e*yma.s*wm[2,3] + 0.5*xfr.e*ymr.s*wm[1,2]*r1)/wbarm
xma.sp <- (0.5*xma.e*yfr.s*wm[2,2] + 0.5*xma.e*yfa.s*wm[2,2] + 0.5*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
yfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.5*xfa.e*yfr.s*wm[2,1] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.5*xma.e*yfr.s*wm[2,2])/wbarm
yfa.sp <- (0.5*xfr.e*yfa.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.5*xmr.e*yfa.s*wm[2,2] + 0.5*xma.e*yfa.s*wm[2,2])/wbarm
ymr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.5*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1 + 0.5*xmr.e*ymr.s*wm[1,3] + 0.5*xma.e*ymr.s*wm[2,3])/wbarm
yma.sp <- (0.5*xfr.e*yma.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2] + 0.5*xmr.e*yma.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
# #male gamete equations - autosome
# xfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.25*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1)/wbarm
# xfa.sp <- (0.25*xfr.e*yfa.s*wm[2,1] + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2])/wbarm
# xmr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.25*xmr.e*yfa.s*wm[2,2] + 0.5*xmr.e*ymr.s*wm[1,3] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*ymr.s*wm[2,3])/wbarm
# xma.sp <- (0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*yfa.s*wm[2,2] + 0.25*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#
# yfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.25*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xma.e*yfr.s*wm[2,2])/wbarm
# yfa.sp <- (0.25*xfr.e*yfa.s*wm[2,1] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*yfa.s*wm[2,2])/wbarm
# ymr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1 + 0.5*xmr.e*ymr.s*wm[1,3] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*ymr.s*wm[2,3])/wbarm
# yma.sp <- (0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#fill in new values
xfr.e <- xfr.ep
xfa.e <- xfa.ep
xmr.e <- xmr.ep
xma.e <- xma.ep
xfr.s <- xfr.sp
xfa.s <- xfa.sp
xmr.s <- xmr.sp
xma.s <- xma.sp
yfr.s <- yfr.sp
yfa.s <- yfa.sp
ymr.s <- ymr.sp
yma.s <- yma.sp
#TODO select frequencies to track
results[i,1] <- (xfr.e+xfr.s)/1.5
results[i,2] <- (xfa.e+xfa.s)/1.5
results[i,3] <- (xmr.e+xmr.s)/1.5
results[i,4] <- (xma.e+xma.s)/1.5
results[i,5] <- yfr.s/0.5
results[i,6] <- yfa.s/0.5
results[i,7] <- ymr.s/0.5
results[i,8] <- yma.s/0.5
#increase mutational load
ml <- ml + me*u
#recalculate male fitness after mutational load changes
wm <- matrix(c(1-aneu, 1-ml, (1+h*s)*(1-aneu), (1+h*s)*(1-ml), (1+s)*(1-aneu), (1+s)*(1-ml)), 2, 3)
}
return(results)
}
steps <- 200
mes <- seq(from = 0, to = 0.5, length.out=steps)
kvals <- seq(from = 0, to = 0.5, length.out=steps)
resXr <- resXa <- resYr <- resYa <- matrix(NA, steps, steps)
row.names(resXr) <- row.names(resXa) <- row.names(resYr) <- row.names(resYa) <- paste("me.", round(mes, 3), sep="")
colnames(resXr) <- colnames(resXa)<- colnames(resYr) <- colnames(resYa) <- paste("kval.", round(kvals, 3), sep="")
gen <- 1000
for (i in 1:steps) { # cycles through the mutational effects factors
print(paste("working on me", i))
for (j in 1:steps) { # cycles through the selection coef.
res <- simLife(r2 = 0.1, r1 = 0.1, h=1, s=0,
aneu = kvals[j], me = mes[i],
gen = gen)
resXr[i, j] <- (res[gen,1]+res[gen,3])
resXa[i, j] <- (res[gen,2]+res[gen,4])
resYr[i, j] <- (res[gen,5]+res[gen,7])
resYa[i, j] <- (res[gen,6]+res[gen,8])
}
}
image(resXa, col = viridis(100), yaxt='n', xaxt='n', zlim = c(0,1),
ylab = "Aneuploidy Rate",
xlab = "Mutation Effect (Deleterious)",
main = "Frequency on X")
axis(2, at = seq(from = 0, to = 1, length.out=6),
labels = seq(from = 0, to = 0.5, length.out=6))
axis(1, at = seq(from = 0, to = 1, length.out=6),
labels = seq(from = 0, to = 0.5, length.out=6))
simLife <- function(h = 1, s = 0, r1 = 0, r2 = 0,
gen = 1000, me = 0.001, u = 0.001,
aneu=0, auto.option=0){
#TODO
# mutational load
ml <- 0
# fitness matrices
wf <- c(1, 1/(1+h*s), 1/(1+s))
wm <- matrix(c(1-aneu, 1-ml, (1+h*s)*(1-aneu), (1+h*s)*(1-ml), (1+s)*(1-aneu), (1+s)*(1-ml)), 2, 3)
# Initial gamete frequencies
# ########### for x
# # eggs
# xfr.e <- 0.499925
# xfa.e <- 0.000075
# xmr.e <- 0.499925
# xma.e <- 0.000075
# # sperm
# xfr.s <- 0.249925
# xfa.s <- 0.000025
# xmr.s <- 0.249925
# xma.s <- 0.000025
# yfr.s <- 0.25
# yfa.s <- 0
# ymr.s <- 0.25
# yma.s <- 0
#
# ########### for y
# # eggs
# xfr.e <- 0.5
# xfa.e <- 0
# xmr.e <- 0.5
# xma.e <- 0
# # sperm
# xfr.s <- 0.25
# xfa.s <- 0
# xmr.s <- 0.25
# xma.s <- 0
# yfr.s <- 0.24995
# yfa.s <- 0.00005
# ymr.s <- 0.24995
# yma.s <- 0.00005
#
############ for autosome
# eggs
xfr.e <- 0.49995
xfa.e <- 0.00005
xmr.e <- 0.49995
xma.e <- 0.00005
# sperm
xfr.s <- 0.249975
xfa.s <- 0.000025
xmr.s <- 0.249975
xma.s <- 0.000025
yfr.s <- 0.249975
yfa.s <- 0.000025
ymr.s <- 0.249975
yma.s <- 0.000025
results <- matrix(NA,gen,8)
colnames(results) <- c("Xfr", "Xfa", "Xmr", "Xma","Yfr", "Yfa", "Ymr", "Yma")
for (i in 1:gen) {
#mean fitnesses (weighted sums, which is a mean)
wbarf <- xfr.e*xfr.s*wf[1] + xfr.e*xfa.s*wf[1] + xfr.e*xmr.s*wf[2] + xfr.e*xma.s*wf[2] + xfa.e*xfr.s*wf[1] + xfa.e*xfa.s*wf[1] + xfa.e*xmr.s*wf[2] + xfa.e*xma.s*wf[2] + xmr.e*xfr.s*wf[2] + xmr.e*xfa.s*wf[2] + xmr.e*xmr.s*wf[3] + xmr.e*xma.s*wf[3] + xma.e*xfr.s*wf[2] + xma.e*xfa.s*wf[2] + xma.e*xmr.s*wf[3] + xma.e*xma.s*wf[3]
wbarm <- xfr.e*yfr.s*wm[1,1] + xfr.e*yfa.s*wm[2,1] + xfr.e*ymr.s*wm[1,2] + xfr.e*yma.s*wm[2,2] + xfa.e*yfr.s*wm[2,1] + xfa.e*yfa.s*wm[2,1] + xfa.e*ymr.s*wm[2,2] + xfa.e*yma.s*wm[2,2] + xmr.e*yfr.s*wm[1,2] + xmr.e*yfa.s*wm[2,2] + xmr.e*ymr.s*wm[1,3] + xmr.e*yma.s*wm[2,3] + xma.e*yfr.s*wm[2,2] + xma.e*yfa.s*wm[2,2] + xma.e*ymr.s*wm[2,3] + xma.e*yma.s*wm[2,3]
#female gamete equations
xfr.ep <- (xfr.e*xfr.s*wf[1] + 0.5*xfr.e*xfa.s*wf[1] + 0.5*xfr.e*xmr.s*wf[2] + 0.5*xfr.e*xma.s*wf[2]*(1-r2) + 0.5*xfa.e*xfr.s*wf[1] + 0.5*xfa.e*xmr.s*wf[2]*r2 + 0.5*xmr.e*xfr.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*r2 + 0.5*xma.e*xfr.s*wf[2]*(1-r2))/wbarf
xfa.ep <- (0.5*xfr.e*xfa.s*wf[1] + 0.5*xfr.e*xma.s*wf[2]*r2 + 0.5*xfa.e*xfr.s*wf[1] + xfa.e*xfa.s*wf[1] + 0.5*xfa.e*xmr.s*wf[2]*(1-r2) + 0.5*xfa.e*xma.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*(1-r2) + 0.5*xma.e*xfr.s*wf[2]*r2 + 0.5*xma.e*xfa.s*wf[2])/wbarf
xmr.ep <- (0.5*xfr.e*xmr.s*wf[2] + 0.5*xfr.e*xma.s*wf[2]*r2 + 0.5*xfa.e*xmr.s*wf[2]*(1-r2) + 0.5*xmr.e*xfr.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*(1-r2) + xmr.e*xmr.s*wf[3] + 0.5*xmr.e*xma.s*wf[3] + 0.5*xma.e*xfr.s*wf[2]*r2 + 0.5*xma.e*xmr.s*wf[3])/wbarf
xma.ep <- (0.5*xfr.e*xma.s*wf[2]*(1-r2) + 0.5*xfa.e*xmr.s*wf[2]*r2 + 0.5*xfa.e*xma.s*wf[2] + 0.5*xmr.e*xfa.s*wf[2]*r2 + 0.5*xmr.e*xma.s*wf[3] + 0.5*xma.e*xfr.s*wf[2]*(1-r2) + 0.5*xma.e*xfa.s*wf[2] + 0.5*xma.e*xmr.s*wf[3] + xma.e*xma.s*wf[3])/wbarf
# #male gamete equations - y chromosome
# xfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.5*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.5*xfr.e*yma.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1)/wbarm
# xfa.sp <- (0.5*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.5*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2])/wbarm
# xmr.sp <- (0.5*xmr.e*yfa.s*wm[2,2] + 0.5*xmr.e*ymr.s*wm[1,3] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.5*xmr.e*yma.s*wm[2,3] + 0.5*xfr.e*ymr.s*wm[1,2]*r1)/wbarm
# xma.sp <- (0.5*xma.e*yfr.s*wm[2,2] + 0.5*xma.e*yfa.s*wm[2,2] + 0.5*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#
# yfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.5*xfa.e*yfr.s*wm[2,1] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.5*xma.e*yfr.s*wm[2,2])/wbarm
# yfa.sp <- (0.5*xfr.e*yfa.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.5*xmr.e*yfa.s*wm[2,2] + 0.5*xma.e*yfa.s*wm[2,2])/wbarm
# ymr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.5*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1 + 0.5*xmr.e*ymr.s*wm[1,3] + 0.5*xma.e*ymr.s*wm[2,3])/wbarm
# yma.sp <- (0.5*xfr.e*yma.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2] + 0.5*xmr.e*yma.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#male gamete equations - autosome
xfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.25*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1)/wbarm
xfa.sp <- (0.25*xfr.e*yfa.s*wm[2,1] + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2])/wbarm
xmr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.25*xmr.e*yfa.s*wm[2,2] + 0.5*xmr.e*ymr.s*wm[1,3] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*ymr.s*wm[2,3])/wbarm
xma.sp <- (0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*yfa.s*wm[2,2] + 0.25*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
yfr.sp <- (0.5*xfr.e*yfr.s*wm[1,1] + 0.25*xfr.e*yfa.s*wm[2,1] + 0.5*xfr.e*ymr.s*wm[1,2]*r1 + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xmr.e*yfr.s*wm[1,2]*(1-r1) + 0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xma.e*yfr.s*wm[2,2])/wbarm
yfa.sp <- (0.25*xfr.e*yfa.s*wm[2,1] + 0.25*xfa.e*yfr.s*wm[2,1] + 0.5*xfa.e*yfa.s*wm[2,1] + 0.25*xmr.e*yfa.s*wm[2,2] + 0.25*xma.e*yfr.s*wm[2,2] + 0.25*xma.e*yfa.s*wm[2,2])/wbarm
ymr.sp <- (0.5*xfr.e*ymr.s*wm[1,2]*(1-r1) + 0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xmr.e*yfr.s*wm[1,2]*r1 + 0.5*xmr.e*ymr.s*wm[1,3] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*ymr.s*wm[2,3])/wbarm
yma.sp <- (0.25*xfr.e*yma.s*wm[2,2] + 0.25*xfa.e*ymr.s*wm[2,2] + 0.5*xfa.e*yma.s*wm[2,2] + 0.25*xmr.e*yma.s*wm[2,3] + 0.25*xma.e*ymr.s*wm[2,3] + 0.5*xma.e*yma.s*wm[2,3])/wbarm
#fill in new values
xfr.e <- xfr.ep
xfa.e <- xfa.ep
xmr.e <- xmr.ep
xma.e <- xma.ep
xfr.s <- xfr.sp
xfa.s <- xfa.sp
xmr.s <- xmr.sp
xma.s <- xma.sp
yfr.s <- yfr.sp
yfa.s <- yfa.sp
ymr.s <- ymr.sp
yma.s <- yma.sp
#TODO select frequencies to track
results[i,1] <- (xfr.e+xfr.s)/1.5
results[i,2] <- (xfa.e+xfa.s)/1.5
results[i,3] <- (xmr.e+xmr.s)/1.5
results[i,4] <- (xma.e+xma.s)/1.5
results[i,5] <- yfr.s/0.5
results[i,6] <- yfa.s/0.5
results[i,7] <- ymr.s/0.5
results[i,8] <- yma.s/0.5
#increase mutational load
ml <- ml + me*u
#recalculate male fitness after mutational load changes
wm <- matrix(c(1-aneu, 1-ml, (1+h*s)*(1-aneu), (1+h*s)*(1-ml), (1+s)*(1-aneu), (1+s)*(1-ml)), 2, 3)
}
return(results)
}
#### ME vs Aneu
steps <- 200
mes <- seq(from = 0, to = 0.5, length.out=steps)
kvals <- seq(from = 0, to = 0.5, length.out=steps)
resXr <- resXa <- resYr <- resYa <- matrix(NA, steps, steps)
row.names(resXr) <- row.names(resXa) <- row.names(resYr) <- row.names(resYa) <- paste("me.", round(mes, 3), sep="")
colnames(resXr) <- colnames(resXa)<- colnames(resYr) <- colnames(resYa) <- paste("kval.", round(kvals, 3), sep="")
gen <- 1000
for (i in 1:steps) { # cycles through the mutational effects factors
print(paste("working on me", i))
for (j in 1:steps) { # cycles through the selection coef.
res <- simLife(r2 = 0.1, r1 = 0.1, h=1, s=0,
aneu = kvals[j], me = mes[i],
gen = gen)
resXr[i, j] <- (res[gen,1]+res[gen,3])
resXa[i, j] <- (res[gen,2]+res[gen,4])
resYr[i, j] <- (res[gen,5]+res[gen,7])
resYa[i, j] <- (res[gen,6]+res[gen,8])
}
}
image(((resXa*1.5)+(resYa*0.5))/2, col = viridis(100), yaxt='n', xaxt='n', zlim = c(0,1),
ylab = "Aneuploidy Rate",
xlab = "Mutation Effect (Deleterious)",
main = "Frequency on Autosome")
axis(2, at = seq(from = 0, to = 1, length.out=6),
labels = seq(from = 0, to = 0.5, length.out=6))
axis(1, at = seq(from = 0, to = 1, length.out=6),
labels = seq(from = 0, to = 0.5, length.out=6))
query.file <- "data/roc1a.fasta"
output.file <- "data/roc1a_blast.csv"
blastn.command <- paste("blastn -query", query.file, "-db", database.name,
"-out data/test_blast_no_header.csv -outfmt '6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore'")
subject.fasta <- "/Users/andresbarboza/Downloads/Drosophila_melanogaster.BDGP6.32.dna.toplevel.fa"
database.name <- "data/d_melanogaster"
query.file <- "data/roc1a.fasta"
output.file <- "data/roc1a_blast.csv"
blastn.command <- paste("blastn -query", query.file, "-db", database.name,
"-out data/test_blast_no_header.csv -outfmt '6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore'")
system(blastn.command)
header <- "qseqid\tsseqid\tpident\tlength\tmismatch\tgapopen\tqstart\tqend\tsstart\tsend\tevalue\tbitscore"
header.file <- tempfile(fileext = ".txt")
writeLines(header, header.file)
blastn.content <- readLines("data/test_blast_no_header.csv")
setwd("~/Documents/GitHub/retrofindR")
#### Test D. melanogaster Analysis ####
# create blast local database
subject.fasta <- "/Users/andresbarboza/Downloads/Drosophila_melanogaster.BDGP6.32.dna.toplevel.fa"
database.name <- "data/d_melanogaster"
# do blastn
query.file <- "data/roc1a.fasta"
output.file <- "data/roc1a_blast.csv"
blastn.command <- paste("blastn -query", query.file, "-db", database.name,
"-out data/test_blast_no_header.csv -outfmt '6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore'")
system(blastn.command)
print(blastn.command)
